{
  "comments": [
    {
      "key": {
        "uuid": "ee391fd1_e9bcd01c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 105
      },
      "writtenOn": "2014-06-11T14:35:57Z",
      "side": 1,
      "message": "I\u0027m not sure \"serialize\" is a valid word, in this meaning. No idea if \"parallelize\" has an opposite. :)",
      "revId": "a510dfa79f8f418e16dab6465ba3e25daca6da97",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee391fd1_712fb8f4",
        "filename": "resources/js/ext.translate.special.pagemigration.js",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 93
      },
      "writtenOn": "2014-06-10T07:20:22Z",
      "side": 1,
      "message": "So all remaining ones will not even be tried if one fails? Some kind of error handling is needed.",
      "revId": "a510dfa79f8f418e16dab6465ba3e25daca6da97",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee391fd1_d13f841f",
        "filename": "resources/js/ext.translate.special.pagemigration.js",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 1511
      },
      "writtenOn": "2014-06-10T07:24:36Z",
      "side": 1,
      "message": "Uhmm, how about calling the same function in .fail()?",
      "parentUuid": "ee391fd1_712fb8f4",
      "revId": "a510dfa79f8f418e16dab6465ba3e25daca6da97",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee391fd1_942c4a91",
        "filename": "resources/js/ext.translate.special.pagemigration.js",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 93
      },
      "writtenOn": "2014-06-10T08:41:49Z",
      "side": 1,
      "message": "You should think about it. Think about this division of errors: fatal errors and transient errors which can be acted by retrying.\n\nIt seems that you need more complex dispatcher code for this part. Something which can:\n* Send N parallel requests (N can be 1 as well for serial)\n* Wait X time between requests\n* Retry on transient errors\n* Return a complete list of promises so that the caller can inspect which ones succeeded and failed. One way to do is to create a separate deferred which will call done()/fail() with the list of deferreds we are building here.\n\nSomething like:\nvar mainDeferred \u003d ...;\n// The current code here\n\n// Once all requests are done\nmainDeferred.resolve( deferreds );\n\n// At the end of function\nreturn mainDeferred;\n\nIt probably even makes sense to create a separate module for this dispatcher. You can also ask on usual places like wikitech or gadget devs whether people have encountered this issue before, or search internet for other existing solutions.",
      "parentUuid": "ee391fd1_d13f841f",
      "revId": "a510dfa79f8f418e16dab6465ba3e25daca6da97",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee391fd1_9a435143",
        "filename": "resources/js/ext.translate.special.pagemigration.js",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 1511
      },
      "writtenOn": "2014-06-10T13:42:10Z",
      "side": 1,
      "message": "I checked for other solutions and recursion was the approach they recommended on SO.\n\n// Once all requests are done \nmainDeferred.resolve( deferreds );\n\n^Does this mean we should go back to a loop? I am not getting how this fits with a recursive solution? Perhaps we could work in an etherpad on this? :)",
      "parentUuid": "ee391fd1_942c4a91",
      "revId": "a510dfa79f8f418e16dab6465ba3e25daca6da97",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee391fd1_91ea1c9b",
        "filename": "resources/js/ext.translate.special.pagemigration.js",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 93
      },
      "writtenOn": "2014-06-10T07:20:22Z",
      "side": 1,
      "message": "Why this check?",
      "revId": "a510dfa79f8f418e16dab6465ba3e25daca6da97",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee391fd1_311010ad",
        "filename": "resources/js/ext.translate.special.pagemigration.js",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1511
      },
      "writtenOn": "2014-06-10T07:24:36Z",
      "side": 1,
      "message": "I was of the impression that the deferred array will be populated completely and when i \u003d\u003d\u003d 0, it would be a good time to return it.",
      "parentUuid": "ee391fd1_91ea1c9b",
      "revId": "a510dfa79f8f418e16dab6465ba3e25daca6da97",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee391fd1_544ee273",
        "filename": "resources/js/ext.translate.special.pagemigration.js",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 93
      },
      "writtenOn": "2014-06-10T08:41:49Z",
      "side": 1,
      "message": "I was thinking along the line: why not return it always?",
      "parentUuid": "ee391fd1_311010ad",
      "revId": "a510dfa79f8f418e16dab6465ba3e25daca6da97",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee391fd1_113e2c27",
        "filename": "resources/js/ext.translate.special.pagemigration.js",
        "patchSetId": 2
      },
      "lineNbr": 277,
      "author": {
        "id": 93
      },
      "writtenOn": "2014-06-10T07:20:22Z",
      "side": 1,
      "message": "Because, at the time you check this, you have only created the first deferred, and the latter ones are being added after the first call is done.",
      "revId": "a510dfa79f8f418e16dab6465ba3e25daca6da97",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee391fd1_f12968e3",
        "filename": "resources/js/ext.translate.special.pagemigration.js",
        "patchSetId": 2
      },
      "lineNbr": 277,
      "author": {
        "id": 1511
      },
      "writtenOn": "2014-06-10T07:24:36Z",
      "side": 1,
      "message": "Oh yeah, what can be a workaround for this?",
      "parentUuid": "ee391fd1_113e2c27",
      "revId": "a510dfa79f8f418e16dab6465ba3e25daca6da97",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee391fd1_94432a43",
        "filename": "resources/js/ext.translate.special.pagemigration.js",
        "patchSetId": 2
      },
      "lineNbr": 277,
      "author": {
        "id": 93
      },
      "writtenOn": "2014-06-10T08:41:49Z",
      "side": 1,
      "message": "See above.",
      "parentUuid": "ee391fd1_f12968e3",
      "revId": "a510dfa79f8f418e16dab6465ba3e25daca6da97",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    }
  ]
}