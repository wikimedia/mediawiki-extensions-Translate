{
  "comments": [
    {
      "key": {
        "uuid": "b755a94a_484ff6af",
        "filename": "MessageGroups.php",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 93
      },
      "writtenOn": "2019-05-06T15:33:27Z",
      "side": 1,
      "message": "Could be initialized to empty array.",
      "revId": "2b86014e8189c3ddd5281bd5fcd38aed897ff9d8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c586325b_0aac5184",
        "filename": "MessageGroups.php",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 6870
      },
      "writtenOn": "2019-05-12T07:19:16Z",
      "side": 1,
      "message": "Want to maintain differentiation between null and empty array. If empty array, means no message groups hooked to TranslateInitGroupLoaders, and no need to trigger the hook again.\n\nUpdated checks below according to feedback",
      "parentUuid": "b755a94a_484ff6af",
      "revId": "2b86014e8189c3ddd5281bd5fcd38aed897ff9d8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "66055728_24faee34",
        "filename": "MessageGroups.php",
        "patchSetId": 1
      },
      "lineNbr": 262,
      "author": {
        "id": 93
      },
      "writtenOn": "2019-05-06T15:33:27Z",
      "side": 1,
      "message": "Comparison to an empty array is preferred over count(): $groupLoaderNames \u003d\u003d\u003d []",
      "revId": "2b86014e8189c3ddd5281bd5fcd38aed897ff9d8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7917506c_c9b34167",
        "filename": "MessageGroups.php",
        "patchSetId": 1
      },
      "lineNbr": 262,
      "author": {
        "id": 6870
      },
      "writtenOn": "2019-05-12T07:19:16Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "66055728_24faee34",
      "revId": "2b86014e8189c3ddd5281bd5fcd38aed897ff9d8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "efc3c095_633dcf94",
        "filename": "MessageGroups.php",
        "patchSetId": 1
      },
      "lineNbr": 267,
      "author": {
        "id": 93
      },
      "writtenOn": "2019-05-06T15:33:27Z",
      "side": 1,
      "message": "Couldn\u0027t this be simplified with instance? I believe it works for interfaces as well.",
      "revId": "2b86014e8189c3ddd5281bd5fcd38aed897ff9d8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "25a4b0c9_869af875",
        "filename": "MessageGroups.php",
        "patchSetId": 1
      },
      "lineNbr": 267,
      "author": {
        "id": 6870
      },
      "writtenOn": "2019-05-12T07:19:16Z",
      "side": 1,
      "message": "Returned an instance from the function triggered on TranslateInitGroupLoaders hook. Based on implemented interfaces, injecting the database and cache.",
      "parentUuid": "efc3c095_633dcf94",
      "revId": "2b86014e8189c3ddd5281bd5fcd38aed897ff9d8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b6a23c4d_e9c902e0",
        "filename": "MessageGroups.php",
        "patchSetId": 1
      },
      "lineNbr": 281,
      "author": {
        "id": 93
      },
      "writtenOn": "2019-05-06T15:33:27Z",
      "side": 1,
      "message": "This part is a bit problematic as it hardcodes the constructor signature. I would like to avoid that. Instead of returning class names, the hook subscribes should return callables (that when called with the cache parameter will return the object) or objects directly. This allows dependency injection in the future in flexible way.",
      "range": {
        "startLine": 275,
        "startChar": 0,
        "endLine": 281,
        "endChar": 4
      },
      "revId": "2b86014e8189c3ddd5281bd5fcd38aed897ff9d8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e50f462_71fbadd5",
        "filename": "MessageGroups.php",
        "patchSetId": 1
      },
      "lineNbr": 281,
      "author": {
        "id": 6870
      },
      "writtenOn": "2019-05-12T07:19:16Z",
      "side": 1,
      "message": "Fixed. Added a new interfaces, DbMessageGroupLoader. Based on implemented interfaces injecting database and subsequently the Cache helper.",
      "parentUuid": "b6a23c4d_e9c902e0",
      "range": {
        "startLine": 275,
        "startChar": 0,
        "endLine": 281,
        "endChar": 4
      },
      "revId": "2b86014e8189c3ddd5281bd5fcd38aed897ff9d8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ffd1f959_7ebcc237",
        "filename": "MessageGroups.php",
        "patchSetId": 1
      },
      "lineNbr": 281,
      "author": {
        "id": 93
      },
      "writtenOn": "2019-05-13T07:16:40Z",
      "side": 1,
      "message": "I don\u0027t think the interface approach will scale, but I\u0027m willing to accept it for now and leave refactoring of that part for later.",
      "parentUuid": "6e50f462_71fbadd5",
      "range": {
        "startLine": 275,
        "startChar": 0,
        "endLine": 281,
        "endChar": 4
      },
      "revId": "2b86014e8189c3ddd5281bd5fcd38aed897ff9d8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3154d70c_d9ee837e",
        "filename": "MessageGroups.php",
        "patchSetId": 1
      },
      "lineNbr": 295,
      "author": {
        "id": 93
      },
      "writtenOn": "2019-05-06T15:33:27Z",
      "side": 1,
      "message": "I so wish PHP had better support for functional programming. Then this loop would be return array_filter( $this-\u003egetGroupLoaders(), $l \u003d\u003e $l instanceof CachedMessageGroupLoader ) :)",
      "revId": "2b86014e8189c3ddd5281bd5fcd38aed897ff9d8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ff5904f_daef6f63",
        "filename": "MessageGroups.php",
        "patchSetId": 1
      },
      "lineNbr": 295,
      "author": {
        "id": 6870
      },
      "writtenOn": "2019-05-12T07:19:16Z",
      "side": 1,
      "message": "True. For now I\u0027ve replaced this with array_filter",
      "parentUuid": "3154d70c_d9ee837e",
      "revId": "2b86014e8189c3ddd5281bd5fcd38aed897ff9d8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4760517_d93f82b3",
        "filename": "messagegroups/TranslatablePageMessageGroupStore.php",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 93
      },
      "writtenOn": "2019-05-06T15:33:27Z",
      "side": 1,
      "message": "Avoid aligning with tabs, one level of indentation is enough.",
      "revId": "2b86014e8189c3ddd5281bd5fcd38aed897ff9d8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01cceffd_aa098a09",
        "filename": "messagegroups/TranslatablePageMessageGroupStore.php",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 6870
      },
      "writtenOn": "2019-05-12T07:19:16Z",
      "side": 1,
      "message": "phpcs complains otherwise,\n\n1. Expected 4 spaces before interface name; 1 found (PSR2.Classes.ClassDeclaration.InterfaceWrongIndent)\n\n2. Tabs must be used to indent lines; spaces are not allowed (Generic.WhiteSpace.DisallowSpaceIndent.SpacesUsed)\n\n3. Only one interface may be specified per line in a multi-line implements declaration\n(PSR2.Classes.ClassDeclaration.InterfaceSameLine)",
      "parentUuid": "c4760517_d93f82b3",
      "revId": "2b86014e8189c3ddd5281bd5fcd38aed897ff9d8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "236b3fc5_60eaf161",
        "filename": "messagegroups/TranslatablePageMessageGroupStore.php",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 93
      },
      "writtenOn": "2019-05-13T07:16:40Z",
      "side": 1,
      "message": "I meant one tab, instead of 4 tabs - not spaces.",
      "parentUuid": "01cceffd_aa098a09",
      "revId": "2b86014e8189c3ddd5281bd5fcd38aed897ff9d8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44433d38_88f8b8b2",
        "filename": "messagegroups/TranslatablePageMessageGroupStore.php",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 93
      },
      "writtenOn": "2019-05-06T15:33:27Z",
      "side": 1,
      "message": "You might want explicit comparison to null, to avoid re-doing this over and over again if the list of groups is empty.",
      "revId": "2b86014e8189c3ddd5281bd5fcd38aed897ff9d8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a53580c7_e9179a5e",
        "filename": "messagegroups/TranslatablePageMessageGroupStore.php",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 6870
      },
      "writtenOn": "2019-05-12T07:19:16Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "44433d38_88f8b8b2",
      "revId": "2b86014e8189c3ddd5281bd5fcd38aed897ff9d8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a8e120c4_47adabe7",
        "filename": "messagegroups/TranslatablePageMessageGroupStore.php",
        "patchSetId": 1
      },
      "lineNbr": 97,
      "author": {
        "id": 93
      },
      "writtenOn": "2019-05-06T15:33:27Z",
      "side": 1,
      "message": "How about negate the condition of the if clause here and move the $groupTitles assignment inside here to avoid repeating the other code?",
      "revId": "2b86014e8189c3ddd5281bd5fcd38aed897ff9d8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c1c83152_d8026fb0",
        "filename": "messagegroups/TranslatablePageMessageGroupStore.php",
        "patchSetId": 1
      },
      "lineNbr": 97,
      "author": {
        "id": 6870
      },
      "writtenOn": "2019-05-12T07:19:16Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a8e120c4_47adabe7",
      "revId": "2b86014e8189c3ddd5281bd5fcd38aed897ff9d8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8647fea7_13a72c02",
        "filename": "messagegroups/TranslatablePageMessageGroupStore.php",
        "patchSetId": 1
      },
      "lineNbr": 116,
      "author": {
        "id": 93
      },
      "writtenOn": "2019-05-06T15:33:27Z",
      "side": 1,
      "message": "I\u0027m not sure this function is useful. What was your plan with it?",
      "revId": "2b86014e8189c3ddd5281bd5fcd38aed897ff9d8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc1da6a0_a2b776eb",
        "filename": "messagegroups/TranslatablePageMessageGroupStore.php",
        "patchSetId": 1
      },
      "lineNbr": 116,
      "author": {
        "id": 6870
      },
      "writtenOn": "2019-05-12T07:19:16Z",
      "side": 1,
      "message": "Purpose of the function is to check if the GlobalDependency has / have expired. This function is passed as touchedCallback parameter to MessageGroupWANCache",
      "parentUuid": "8647fea7_13a72c02",
      "revId": "2b86014e8189c3ddd5281bd5fcd38aed897ff9d8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d7eede9_aa0df4c9",
        "filename": "messagegroups/TranslatablePageMessageGroupStore.php",
        "patchSetId": 1
      },
      "lineNbr": 124,
      "author": {
        "id": 6870
      },
      "writtenOn": "2019-05-05T11:27:04Z",
      "side": 1,
      "message": "Used Hooks to load these classes because certain tests expect only certain MessageGroups to be configured. If added using in the constructor call, tests can\u0027t control what MessageGroups are configured.",
      "revId": "2b86014e8189c3ddd5281bd5fcd38aed897ff9d8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c2b40f8a_95ceed9c",
        "filename": "messagegroups/TranslatablePageMessageGroupStore.php",
        "patchSetId": 1
      },
      "lineNbr": 124,
      "author": {
        "id": 93
      },
      "writtenOn": "2019-05-06T15:33:27Z",
      "side": 1,
      "message": "That seems okay.",
      "parentUuid": "3d7eede9_aa0df4c9",
      "revId": "2b86014e8189c3ddd5281bd5fcd38aed897ff9d8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "61fbc4c5_37fee243",
        "filename": "tests/phpunit/WikiPageMessageGroupSerializationTest.php",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 93
      },
      "writtenOn": "2019-05-06T15:33:27Z",
      "side": 1,
      "message": "Can this use $this-\u003esetTemporaryHook() ?",
      "revId": "2b86014e8189c3ddd5281bd5fcd38aed897ff9d8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c35171e2_e7f70860",
        "filename": "tests/phpunit/WikiPageMessageGroupSerializationTest.php",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 6870
      },
      "writtenOn": "2019-05-12T07:19:16Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "61fbc4c5_37fee243",
      "revId": "2b86014e8189c3ddd5281bd5fcd38aed897ff9d8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "acad65ed_b9963539",
        "filename": "tests/phpunit/tag/PageTranslationHooksTest.php",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 93
      },
      "writtenOn": "2019-05-06T15:33:27Z",
      "side": 1,
      "message": "Can this use $this-\u003esetTemporaryHook() ?",
      "revId": "2b86014e8189c3ddd5281bd5fcd38aed897ff9d8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f82db9b9_b5826f63",
        "filename": "tests/phpunit/tag/PageTranslationHooksTest.php",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 6870
      },
      "writtenOn": "2019-05-12T07:19:16Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "acad65ed_b9963539",
      "revId": "2b86014e8189c3ddd5281bd5fcd38aed897ff9d8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "89d3f772_fda97b57",
        "filename": "utils/MessageGroupWANCache.php",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 6870
      },
      "writtenOn": "2019-05-05T11:27:04Z",
      "side": 1,
      "message": "Decided to wrap the functionality related to WANObjectCache in this class, and inject it into the Loaders / Stores. That way during tests these can be mocked.\n\nThe class itself is generic across loaders / stores, but is configured uniquely by each loader / group. Hence the need to checkConfig before in every public method.\n\nAnother gotcha is that it can handle only a single key per message group, which I think is fine.",
      "revId": "2b86014e8189c3ddd5281bd5fcd38aed897ff9d8",
      "serverId": "e9e9afe9-4712-486d-8885-f54b72dd1951",
      "unresolved": true
    }
  ]
}